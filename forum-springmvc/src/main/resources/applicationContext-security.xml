<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
	
	
	<http auto-config="true" use-expressions="true">
		<form-login login-page="/loginForm" 
					login-processing-url="/login"
					authentication-failure-url="/loginForm?error"
					username-parameter="email" 
					password-parameter="password"/>
		
		<logout logout-url="/logout" logout-success-url="/loginForm?logout"/>
		
		
		<intercept-url pattern="/login*" access="permitAll"/>
		<intercept-url pattern="/register*" access="permitAll"/>
		<intercept-url pattern="/admin/*" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/*" access="hasRole('ROLE_USER')"/>
		
	</http>
	
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
								users-by-username-query="select email as username,password,enabled from users where email = ?"
								authorities-by-username-query="select email, role_name as authority from roles r join users u on r.user_id=u.user_id and u.email = ?"/>
		</authentication-provider>
	
	</authentication-manager>
</beans:beans>
